{"version":3,"sources":["../src/index.ts","../src/streamr-client.ts"],"sourcesContent":["import { Client, IAgentRuntime, elizaLogger } from \"@elizaos/core\";\nimport { StreamrElizaClient } from \"./streamr-client\";\n\n\nexport const StreamrClientInterface: Client = {\n    name: \"streamr\",\n    async start(runtime: IAgentRuntime) {\n        const streamrClient = new StreamrElizaClient(runtime);\n        await streamrClient.initialize();\n        elizaLogger.success(\n            `✅ Streamr client successfully started for character ${runtime.character.name}`\n        );\n        return streamrClient;\n    }\n};\n\nexport default StreamrClientInterface;\n\nexport { StreamrElizaClient } from './streamr-client';","import { elizaLogger, IAgentRuntime, type ClientInstance } from \"@elizaos/core\";\nimport { StreamrClient } from \"@streamr/sdk\";\n\nexport class StreamrElizaClient implements ClientInstance {\n    private streamrClient: StreamrClient;\n    private runtime: IAgentRuntime;\n\n    private wallet: string;\n\n    constructor(runtime: IAgentRuntime) {\n        elizaLogger.log(\"📱 Constructing new StreamrClient...\");\n        this.runtime = runtime;\n        this.wallet = runtime.getSetting(\"STREAMR_WALLET\");\n        if (!this.wallet) {\n            throw new Error(\"STREAMR configs are not set\");\n        }\n    }\n\n    async initialize() {\n        elizaLogger.log(\"🚀 Starting StreamrClient...\");\n        try {\n            this.streamrClient = new StreamrClient({\n                auth: {\n                    privateKey: this.wallet\n                }\n            })\n        } catch (error) {\n            elizaLogger.error(\"❌ Failed to start StreamrClient:\", error);\n            throw error;\n        }\n    }\n\n    async subscribe(streamId: string, partitionId: number, callback: (message: any) => void) {\n        elizaLogger.log(\"Subscribing to Streamr\", streamId, partitionId);\n        try {\n            return await this.streamrClient.subscribe(\n                { id: streamId, partition: partitionId },\n                callback\n            );\n        }\n        catch (error) {\n            elizaLogger.error(\"Error subscribing to Streamr\", error);\n            throw error;\n        }\n    }\n\n    async publish(streamId: string, partitionId: number, message: any) {\n        elizaLogger.log(\"Publishing message to Streamr\", message);\n        try {\n            return await this.streamrClient.publish({\n                id: streamId,\n                partition: partitionId\n            }, message);\n        } catch (error) {\n            elizaLogger.error(\"Error publishing message to Streamr\", error);\n            throw error;\n        }\n    }\n\n    async stop() {\n        elizaLogger.log(\"Destroying StreamrClient\");\n        try {\n            return await this.streamrClient.destroy();\n        } catch (error) {\n            elizaLogger.error(\"Error destroying StreamrClient\", error);\n            throw error;\n        }\n    }\n}"],"mappings":";AAAA,SAAgC,eAAAA,oBAAmB;;;ACAnD,SAAS,mBAAuD;AAChE,SAAS,qBAAqB;AAEvB,IAAM,qBAAN,MAAmD;AAAA,EAC9C;AAAA,EACA;AAAA,EAEA;AAAA,EAER,YAAY,SAAwB;AAChC,gBAAY,IAAI,6CAAsC;AACtD,SAAK,UAAU;AACf,SAAK,SAAS,QAAQ,WAAW,gBAAgB;AACjD,QAAI,CAAC,KAAK,QAAQ;AACd,YAAM,IAAI,MAAM,6BAA6B;AAAA,IACjD;AAAA,EACJ;AAAA,EAEA,MAAM,aAAa;AACf,gBAAY,IAAI,qCAA8B;AAC9C,QAAI;AACA,WAAK,gBAAgB,IAAI,cAAc;AAAA,QACnC,MAAM;AAAA,UACF,YAAY,KAAK;AAAA,QACrB;AAAA,MACJ,CAAC;AAAA,IACL,SAAS,OAAO;AACZ,kBAAY,MAAM,yCAAoC,KAAK;AAC3D,YAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,MAAM,UAAU,UAAkB,aAAqB,UAAkC;AACrF,gBAAY,IAAI,0BAA0B,UAAU,WAAW;AAC/D,QAAI;AACA,aAAO,MAAM,KAAK,cAAc;AAAA,QAC5B,EAAE,IAAI,UAAU,WAAW,YAAY;AAAA,QACvC;AAAA,MACJ;AAAA,IACJ,SACO,OAAO;AACV,kBAAY,MAAM,gCAAgC,KAAK;AACvD,YAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,MAAM,QAAQ,UAAkB,aAAqB,SAAc;AAC/D,gBAAY,IAAI,iCAAiC,OAAO;AACxD,QAAI;AACA,aAAO,MAAM,KAAK,cAAc,QAAQ;AAAA,QACpC,IAAI;AAAA,QACJ,WAAW;AAAA,MACf,GAAG,OAAO;AAAA,IACd,SAAS,OAAO;AACZ,kBAAY,MAAM,uCAAuC,KAAK;AAC9D,YAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,MAAM,OAAO;AACT,gBAAY,IAAI,0BAA0B;AAC1C,QAAI;AACA,aAAO,MAAM,KAAK,cAAc,QAAQ;AAAA,IAC5C,SAAS,OAAO;AACZ,kBAAY,MAAM,kCAAkC,KAAK;AACzD,YAAM;AAAA,IACV;AAAA,EACJ;AACJ;;;ADhEO,IAAM,yBAAiC;AAAA,EAC1C,MAAM;AAAA,EACN,MAAM,MAAM,SAAwB;AAChC,UAAM,gBAAgB,IAAI,mBAAmB,OAAO;AACpD,UAAM,cAAc,WAAW;AAC/B,IAAAC,aAAY;AAAA,MACR,4DAAuD,QAAQ,UAAU,IAAI;AAAA,IACjF;AACA,WAAO;AAAA,EACX;AACJ;AAEA,IAAO,gBAAQ;","names":["elizaLogger","elizaLogger"]}